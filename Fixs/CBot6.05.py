#–ß—É–¥–æ –±–æ—Ç
import discord
import asyncio
from discord.ext import commands
import pytz
import datetime
import random
import json
import time

# –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
message_count = {}
TOP_LIST_FILE = "top_list.json"
prefix = "!"
random_responses=[
    "–ù–µ–∞–∫—Ç—É–∞–ª—å–Ω–æ"
    ]

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
bot = commands.Bot(intents=discord.Intents.all(), case_insensitive=True, command_prefix=prefix)

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
def load_top_list():
    try:
        with open(TOP_LIST_FILE, "r") as file:
            return json.load(file)
    except FileNotFoundError:
        return []

def save_top_list(top_list):
    with open(TOP_LIST_FILE, "w") as file:
        json.dump(top_list, file)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
@bot.event
async def on_ready():
    print(f"{bot.user.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")

# –í—Ä–µ–º—è
@bot.command(name='–í—Ä–µ–º—è')
async def get_time(ctx):
    ny_timezone = pytz.timezone('Asia/Sakhalin')
    current_time = datetime.datetime.now(ny_timezone).strftime("%H:%M:%S")
    await ctx.send(f"–°–µ–π—á–∞—Å —É –ß—É–¥–∞—á–∫–∏: {current_time}")
# –ö–æ–º–∞–Ω–¥–∞ - Vk Play
@bot.command(name='–í–∫–ø–ª–µ–π')
async def vk_play(ctx):
    await ctx.send("# [–ß—É–¥–∞—á–∫–∞ - –í—ã–∂–∏–≤–∞–Ω–∏–µ Vk Play Live](https://live.vkplay.ru/chudachkapw)")
# –ö–æ–º–∞–Ω–¥–∞ - Twitch
@bot.command(name='–¢–≤–∏—á')
async def Twitch(ctx):
    await ctx.send("# [–ß—É–¥–∞—á–∫–∞ - –í—ã–∂–∏–≤–∞–Ω–∏–µ Twitch](https://www.twitch.tv/chudachkafun)")
# –ö–æ–º–∞–Ω–¥–∞ - –î–∏—Å–∫–æ—Ä–¥
@bot.command(name='–î–∏—Å–∫–æ—Ä–¥')
async def discord_info(ctx):
    await ctx.send("# [–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–µ—Ä—É Discord!](https://discord.com/invite/pQ9zfKzmCj)")
# –ö–æ–º–∞–Ω–¥–∞ - –ü–ö
@bot.command(name='–ü–ö')
async def pc_info(ctx):
    await ctx.send("## –ö–æ–Ω—Ñ–∏–≥ –ü–ö –ß—É–¥–∞—á–∫–∏\n Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz\n Motherboard ‚Äî Gigabyte GA-Z97P-D3\n MSI GeForce RTX 4060 GAMING X")
# –ö–æ–º–∞–Ω–¥–∞ - –ú–µ–º—ã
@bot.command(name='–º–µ–º')
async def memes(ctx):
    await ctx.send("# [–ö–∏–Ω—å –º–µ–º –ß—É–¥–∞—á–∫–µ –Ω–∞ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é!](https://memealerts.com/643f478676d4d6f40e06de95)")
# –ö–æ–º–∞–Ω–¥–∞ - –ë—É—Å—Ç–∏
@bot.command(name='–±—É—Å—Ç–∏')
async def memes(ctx):
    await ctx.send("# [–ü–æ–¥–¥–µ—Ä–∂–∏ –ß—É–¥–∞—á–∫—É –Ω–∞ –±—É—Å—Ç–∏!](https://boosty.to/chudachkapw/purchase/784395?share=subscription_link)")
# –ö–æ–º–∞–Ω–¥–∞ - –ì–¥–µ —Å—Ç—Ä–∏–∏–º
@bot.command(name='–ì–¥–µ—Å—Ç—Ä–∏–º')
async def stream_info(ctx):
    excuses = [
        "–°–µ–≥–æ–¥–Ω—è —É–∂–µ –Ω–µ —É—Å–ø–µ–µ–º, –∂–¥–µ–º –∑–∞–≤—Ç—Ä–∞.",
        "–°—Ç—Ä–∏–º –±—É–¥–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑, –æ–∂–∏–¥–∞–π—Ç–µ!",
        "–ü–ª–∞–Ω–∏—Ä—É–µ–º —Å—Ç—Ä–∏–º –Ω–∞ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏."
    ]
    excuse = random.choice(excuses)
    await ctx.send(f"{excuse}")
# –ö–æ–º–∞–Ω–¥–∞ - –î–æ—Ç–∞
@bot.command(name='–î–æ—Ç–∞')
async def play_dota(ctx):
    message = "```–ß—É–¥–æ –ø–æ–∏–≥—Ä–∞–µ—Ç –≤ –¥–æ—Ç—É –∑–∞ 50.044 —Ä—É–±–ª–µ–π```"
    await ctx.send(message)
# –ö–æ–º–∞–Ω–¥–∞ - –¢–∞–Ω–∫–∏
@bot.command(name='–¢–∞–Ω–∫–∏')
async def play_dota(ctx):
    message = "```–ß—É–¥–æ –Ω–µ –ø–æ–∏–≥—Ä–∞–µ—Ç –≤ –¢–∞–Ω–∫–∏ ü§°```"
    await ctx.send(message)


# !—Å—Ç—Ä–∏–º
@bot.command()
@commands.has_permissions(administrator=True)
async def —Å—Ç—Ä–∏–º(ctx, *, comment: str = ''):
    channel_id = 1179745995345645609
    channel = bot.get_channel(channel_id)
    if channel is not None:
        message = (
            f"## –ù–∞—á–∞–ª—Å—è —Å—Ç—Ä–∏–º! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å! {comment}\n"
            "## [–ß—É–¥–∞—á–∫–∞ - –í—ã–∂–∏–≤–∞–Ω–∏–µ Twitch](https://www.twitch.tv/chudachkafun)\n"
            "## [–ß—É–¥–∞—á–∫–∞ - –í—ã–∂–∏–≤–∞–Ω–∏–µ Vk Play Live](https://live.vkplay.ru/chudachkapw)"
        )
        await channel.send(message)
    else:
        await ctx.send("–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –∫–∞–Ω–∞–ª–∞.")

# –∂–æ–ø–∫–∏
@bot.command(name='–ù–æ–≤–∞—è–ñ–æ–ø–∫–∞')
async def new_user(ctx, nickname):
    if not ctx.author.guild_permissions.administrator:
        await ctx.send("–û—à–∏–±–∫–∞: –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    top_list = load_top_list()
    for user_info in top_list:
        if user_info['–Ω–∏–∫–Ω–µ–π–º'] == nickname:
            await ctx.send("–û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –Ω–∏–∫–Ω–µ–π–º–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            return
    user_num = len(top_list) + 1
    top_list.append({'–Ω–∏–∫–Ω–µ–π–º': nickname, '–∂–æ–ø–∫–∏': 2})
    save_top_list(top_list)
    await ctx.send(f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {nickname} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Å –ø–æ—Ä—è–¥–∫–æ–≤—ã–º –Ω–æ–º–µ—Ä–æ–º {user_num}.")


@bot.command(name='–ù–æ–º–µ—Ä–∞–∂–æ–ø–æ–∫')
async def list_users(ctx):
    top_list = load_top_list()
    users_info = "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –Ω–æ–º–µ—Ä–æ–≤:\n"
    for user_num, user_info in enumerate(top_list, start=1):
        users_info += f"{user_num}. {user_info['–Ω–∏–∫–Ω–µ–π–º']} - ({user_info['–∂–æ–ø–∫–∏']} –∂–æ–ø–æ–∫)\n"  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∂–æ–ø–æ–∫ –∫ –≤—ã–≤–æ–¥—É
    await ctx.send(users_info)
    
@bot.command(name='–ñ–æ–ø–∫–∞')
async def asses_leaderboard(ctx):
    top_list = load_top_list()
    leaderboard = "–¢–æ–ø-5 –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∂–æ–ø–æ–∫:\n"
    for i, user_info in enumerate(sorted(top_list, key=lambda x: x['–∂–æ–ø–∫–∏'], reverse=True)[:5], start=1):
        leaderboard += f"{i}. {user_info['–Ω–∏–∫–Ω–µ–π–º']} - ({user_info['–∂–æ–ø–∫–∏']} –∂–æ–ø–æ–∫)\n"
    await ctx.send(leaderboard)
@bot.command(name='–ü–µ—Ä–µ–≤–µ—Å—Ç–∏–∂–æ–ø–∫–∏')
async def transfer_asses(ctx, from_user: int, to_user: int, amount: int):
    if not ctx.author.guild_permissions.administrator:
        await ctx.send("–û—à–∏–±–∫–∞: –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    top_list = load_top_list()
    if from_user < 1 or from_user > len(top_list) or to_user < 1 or to_user > len(top_list):
        await ctx.send("–û—à–∏–±–∫–∞: –û–¥–∏–Ω –∏–ª–∏ –æ–±–∞ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç.")
        return
    if top_list[from_user - 1]['–∂–æ–ø–∫–∏'] < amount:
        await ctx.send("–û—à–∏–±–∫–∞: –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∂–æ–ø–æ–∫ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏.")
        return
    top_list[from_user - 1]['–∂–æ–ø–∫–∏'] -= amount
    top_list[to_user - 1]['–∂–æ–ø–∫–∏'] += amount
    save_top_list(top_list)

    await ctx.send(f"–£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ {amount} –∂–æ–ø–æ–∫ –æ—Ç {top_list[from_user - 1]['–Ω–∏–∫–Ω–µ–π–º']} –∫ {top_list[to_user - 1]['–Ω–∏–∫–Ω–µ–π–º']}.")

#1
@bot.event
async def on_message(message):
    if not message.content.startswith(prefix):
        return
    if message.author == bot.user:
        return
    user_id = message.author.id
    moderator_roles = ["–ß—É–¥–æ", "–°—Ñ–µ—Ä–∞", "–í–ª–∞–¥","–°–µ—Ä–∂–∞–Ω—Ç –∞–ø–µ–ª—å—Å–∏–Ω"]
    is_moderator = False
    for role in message.author.roles:
        if role.name in moderator_roles:
            is_moderator = True
            break
    if is_moderator:
        await bot.process_commands(message)
        return
    current_time = time.time()
    message_count.setdefault(user_id, {"count": 0, "last_message_time": 0})
    if current_time - message_count[user_id]["last_message_time"] > 1800:  # 1800 —Å–µ–∫—É–Ω–¥ = 30 –º–∏–Ω—É—Ç
        message_count[user_id]["count"] = 0
    message_count[user_id]["last_message_time"] = current_time
    message_count[user_id]["count"] += 1
    if message_count[user_id]["count"] > 5:
        await message.channel.send(f"{message.author.mention}, –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫–æ–º–∞–Ω–¥ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –º–∏–Ω—É—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã.")
    else:
        await bot.process_commands(message)
#2
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound):
        response = random.choice(["–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω–∞"])
        await ctx.send(response)

#–û—Ç–≤–µ—Ç–æ—á–∫–∞
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound):
        response = random.choice(random_responses)
        await ctx.send(response)
    else:
        
        pass
# –¢–æ–∫–µ–Ω

